/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CCResultsPanel.java
 *
 * Created on 09.10.2011, 09:05:37
 */

package experiments.crosscorrelation;


import org.apache.hadoopts.chart.simple.MyXYPlot;
import org.apache.hadoopts.data.series.CombinedMessreihe;
import org.apache.hadoopts.data.series.Messreihe;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.StringTokenizer;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import org.jfree.ui.RefineryUtilities;
import graph.jung2.MyLensDemo;
import research.wikinetworks.NodePair;
import com.cloudera.wikiexplorer.ng.util.LinkGroup;
import com.cloudera.wikiexplorer.ng.util.NodeGroup;

/**
 *
 * @author kamir
 */
public class CCResultsPanel extends javax.swing.JDialog {

    /** Creates new form CCResultsPanel */
    public CCResultsPanel(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        histSignLevel = new javax.swing.JPanel();
        histK = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setLayout(new java.awt.BorderLayout());

        jTabbedPane1.setPreferredSize(new java.awt.Dimension(600, 800));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(800, 800));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTabbedPane1.addTab("Cross-Correlation EDITS", jScrollPane1);
        jTabbedPane1.addTab( CCResultViewer.LABEL, jScrollPane1);

        jPanel5.add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        jButton4.setText("show col statistics");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton4);

        jButton5.setText("show scatter plot");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton5);

        jPanel5.add(jPanel6, java.awt.BorderLayout.NORTH);

        getContentPane().add(jPanel5, java.awt.BorderLayout.EAST);

        jPanel1.setPreferredSize(new java.awt.Dimension(480, 480));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel7.setLayout(new java.awt.GridLayout(2, 0));

        histSignLevel.setBackground(new java.awt.Color(255, 255, 255));
        histSignLevel.setLayout(new java.awt.BorderLayout());
        jPanel7.add(histSignLevel);

        histK.setBackground(new java.awt.Color(255, 255, 255));
        histK.setLayout(new java.awt.BorderLayout());
        jPanel7.add(histK);

        jPanel1.add(jPanel7, java.awt.BorderLayout.CENTER);

        jPanel8.setPreferredSize(new java.awt.Dimension(420, 200));

        jButton3.setText("toggle rows");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton3);

        jButton6.setText("store selected group");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton6);

        jButton1.setText("interval \\u03C4=[...]");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton1);

        jButton7.setText("jButton7");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton7);

        jPanel1.add(jPanel8, java.awt.BorderLayout.NORTH);

        getContentPane().add(jPanel1, java.awt.BorderLayout.WEST);

        jPanel2.setBackground(new java.awt.Color(255, 255, 204));
        jPanel2.setMinimumSize(new java.awt.Dimension(800, 800));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new java.awt.BorderLayout());

        jButton2.setText("threshold for link strength=?");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2, java.awt.BorderLayout.PAGE_START);

        jScrollPane2.setViewportView(jPanel3);

        jPanel2.add(jScrollPane2, java.awt.BorderLayout.CENTER);
        jPanel2.add(jPanel4, java.awt.BorderLayout.NORTH);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    double d2 = 0.0;
    double d1 = 0.0;
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String s = javax.swing.JOptionPane.showInputDialog("tau=[a, ... ,b]", "-0.1 0.1");
        StringTokenizer st = new StringTokenizer( s );

        try {
            d1 = Double.parseDouble(st.nextToken());
            d2 = d1;
            try {
                d2 = Double.parseDouble(st.nextToken());
            }
            catch(Exception ex) {
                d1 = d2;
            }
            this.setHistogramme( r, d1, d2);
            validate();
            repaint();
        }
        catch(Exception ex) {

        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String s = javax.swing.JOptionPane.showInputDialog("strength = ");
        double d = Double.parseDouble(s);
        this.setGraph( r, d);
        validate();
        repaint();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        r.s1 = !r.s1;
        this.setHistogramme( r, d1, d2);
        validate();
        repaint();
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:

        int i = javax.swing.JOptionPane.showOptionDialog(rootPane, "Select column ...", "Select column ...", javax.swing.JOptionPane.OK_OPTION, javax.swing.JOptionPane.INFORMATION_MESSAGE
                , null, r.colNames, r.colNames[3] );
        
        Messreihe mr = this.r.getMessreiheForColumn(i-1);
        System.out.println( mr.getStatisticData("> " ) );

        JDialog f = new JDialog(this,"Statistic to col: " + r.colNames[i] );

        f.getContentPane().setLayout( new BorderLayout() );
        f.getContentPane().add( r.createHistogramm(mr, 1000, -10, 10) , BorderLayout.CENTER );
        f.setSize( 640,480);
        RefineryUtilities.centerFrameOnScreen(f);
        f.setModal(true);
        f.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:

        Messreihe mrK = this.r.getMessreiheForColumn(0);
        Messreihe mrS = this.r.getMessreiheForColumn(3);

        Messreihe[] mrs = new Messreihe[1];
        mrs[0] = CombinedMessreihe.combine2Rows(mrK.abs(), mrS );
        
//        JFrame f = new JFrame("Scatter-Plot for \u03C4 vs. strength" );
        MyXYPlot.xRangDEFAULT_MAX = mrK.getMaxY() +1 ;
        MyXYPlot.yRangDEFAULT_MAX = mrS.getMaxY() +1 ;
        MyXYPlot.rowONEDefualtColor = Color.BLACK;

        MyXYPlot.open(  mrs, "\u03C4 vs. strength", "\u03C4", "strength", true);

//        f.getContentPane().setLayout( new BorderLayout() );
//        f.setSize( 640,480);
//        RefineryUtilities.centerFrameOnScreen(f);
//        f.setAlwaysOnTop(true);
//        f.setVisible(true);

        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        Vector<NodePair> v = r.getValuesForIntervallOf_tau();
        NodeGroup ng = new NodeGroup( v );
        ng.comment = " selction of: " + r.lang + "_" + r.nrOfNodes + "\n# ";
        String p = ng.pfad;
        String name = javax.swing.JOptionPane.showInputDialog("Name of NodeGroup : ");
        if ( !name.endsWith(".ng") ) name = name+".ng";
        ng.fn = name;
        
        if ( !p.endsWith( "filtered/" )) {
            ng.pfad = ng.pfad + "filtered/";
        }

        try {
            ng.store();
        }
        catch (Exception ex) {
            Logger.getLogger(CCResultsPanel.class.getName()).log(Level.SEVERE, null, ex);
        }

        LinkGroup lg = new LinkGroup(v,name);
        lg.lookupStaticLinks();


    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jButton7ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CCResultsPanel dialog = new CCResultsPanel(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }


    CCResults r = null;

    public static void open(final CCResults r) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                final CCResultsPanel dialog = new CCResultsPanel(new javax.swing.JFrame(), false);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        dialog.dispose();
                    }
                });

                dialog.r = r;

                dialog.setTitle( "LangID=" + r.lang + " #nodes=" + r.nrOfNodes + " (" + r.paare.size() + ")");
                
                dialog.setTabelle( r );

                double tr = 0.0;
                dialog.setHistogramme( r , tr, tr );

                dialog.setGraph( r , 4 );

                Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
                Dimension d2 = new Dimension( d.width, d.height - 40);
                dialog.setSize( d2 );
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel histK;
    private javax.swing.JPanel histSignLevel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private void setHistogramme(CCResults r, double t1, double t2) {

        r.createHistogrammDataSets( t1, t2 );

        this.histK.removeAll();
        this.histK.add( r.getHistK() );

        this.histSignLevel.removeAll();
        this.histSignLevel.add( r.getHistSigLevel() );

        this.jButton1.setText( "interval \u03C4=["+t1+" ... "+t2+"]" );
        
        this.validate();
        this.repaint();
        
    }

    private void setTabelle(CCResults r) {
        /**
         * http://www.java-forum.org/java-faq-beitraege/39070-jtable-teil-8-sortieren.html
         */

        TableModel tm = r.getTableModel();
         // Der TableRowSorter wird die Daten des Models sortieren
        TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>();

        // Der Sorter muss dem JTable bekannt sein
        this.jTable1.setRowSorter( sorter );

        // ... und der Sorter muss wissen, welche Daten er sortieren muss
        sorter.setModel( tm );

        this.jTable1.setModel( tm );

        TableColumn column = null;
        for (int i = 0; i < 5; i++) {
            column = jTable1.getColumnModel().getColumn(i);
            if (i < 2) {
                column.setPreferredWidth(100); //third column is bigger
            } else {
                column.setPreferredWidth(320);
            }
        }
    }

    private void setGraph(CCResults r, double sigLevel ) {

        this.jButton2.setText("threshold for Network strength=" + sigLevel);

        MyLensDemo mld = new MyLensDemo(r , sigLevel );
        this.jPanel3.removeAll();
        this.jPanel3.add( mld );
        this.validate();
        this.repaint();
    }

}
