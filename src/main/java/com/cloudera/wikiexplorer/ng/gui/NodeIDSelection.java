/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NodeIDSelection.java
 *
 * Created on 08.10.2011, 15:57:40
 */

package com.cloudera.wikiexplorer.ng.gui;


import org.apache.hadoopts.data.series.Messreihe;
import org.apache.hadoopts.chart.simple.MultiChart;
import extraction.TimeSeriesFactory;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.GraphicsConfiguration;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.HeadlessException;

import java.awt.Image;
import java.awt.Toolkit;
import java.awt.Transparency;
import java.awt.image.BufferedImage;
import java.awt.image.ColorModel;
import java.awt.image.PixelGrabber;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ButtonGroup;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import research.wikinetworks.CCCalculator;
import research.wikinetworks.NodePair;
import research.wikinetworks.PageNameListe;
import research.wikinetworks.PageNameLoader;
import experiments.crosscorrelation.KreuzKorrelation;
import com.cloudera.wikiexplorer.ng.util.NodeGroup;

/**
 * 0.) Create a NodeIDSelection tool
 * 1.) Set a NodeGroup from outside
 * 2.) call open() Method
 * @author kamir
 */
public class NodeIDSelection extends javax.swing.JDialog {

    static public NodeGroup ng = null;

    ButtonGroup bg1 = new ButtonGroup();

    /** Creates new form NodeIDSelection */
    public NodeIDSelection(java.awt.Frame parent, boolean modal) {
        super(parent, modal);

        initComponents();
         Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
         Dimension d2 = new Dimension( d.width - 200, d.height - 40);
         setSize( d2 );
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpCHART_ACCESS = new javax.swing.JPanel();
        jpCHART_EDITS = new javax.swing.JPanel();
        jpCHART_CC = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jpListLeft = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jpListRight = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jPanel6 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jpActions = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        jToggleButton3 = new javax.swing.JToggleButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel13 = new javax.swing.JPanel();
        jButton15 = new javax.swing.JButton();

        jpCHART_ACCESS.setBackground(new java.awt.Color(255, 255, 255));
        jpCHART_ACCESS.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(3, 3, 3, 3), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255))));
        jpCHART_ACCESS.setLayout(new java.awt.BorderLayout());

        jpCHART_EDITS.setBackground(new java.awt.Color(255, 255, 255));
        jpCHART_EDITS.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(3, 3, 3, 3), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 51))));
        jpCHART_EDITS.setLayout(new java.awt.BorderLayout());

        jpCHART_CC.setBackground(new java.awt.Color(255, 255, 204));
        jpCHART_CC.setLayout(new java.awt.BorderLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1024, 768));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel1.setText("File : ");
        jPanel1.add(jLabel1);

        jTextField1.setText("jTextField1");
        jPanel1.add(jTextField1);

        jButton1.setText("...");
        jPanel1.add(jButton1);

        getContentPane().add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel2.setBackground(new java.awt.Color(255, 255, 204));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(), javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5)));
        jPanel8.setLayout(new java.awt.BorderLayout());

        jpListLeft.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(180, 320));

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        jpListLeft.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel8.add(jpListLeft, java.awt.BorderLayout.WEST);

        jpListRight.setBackground(new java.awt.Color(255, 255, 204));
        jpListRight.setLayout(new java.awt.BorderLayout());

        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jList2.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jList2.setPreferredSize(new java.awt.Dimension(180, 380));
        jScrollPane2.setViewportView(jList2);

        jpListRight.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 10, 10));
        jPanel6.setLayout(new java.awt.GridLayout(16, 1, 10, 5));

        jButton6.setText(">");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton6);

        jButton7.setText("<");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton7);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setPreferredSize(new java.awt.Dimension(20, 20));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 95, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 41, Short.MAX_VALUE)
        );

        jPanel6.add(jPanel7);

        jButton8.setText(">>");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton8);

        jButton11.setText("clear ids");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton11);

        jLabel6.setText(" ");
        jPanel6.add(jLabel6);

        jButton13.setText("paste pair");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton13);

        jButton14.setText("use selection");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton14);

        jpListRight.add(jPanel6, java.awt.BorderLayout.WEST);

        jPanel8.add(jpListRight, java.awt.BorderLayout.CENTER);

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        jPanel9.setLayout(new java.awt.BorderLayout());

        jpActions.setBackground(new java.awt.Color(255, 255, 255));
        jpActions.setLayout(new java.awt.GridLayout(16, 1, 5, 5));

        jButton3.setText("TS");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jpActions.add(jButton3);

        jButton4.setText("KK");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jpActions.add(jButton4);

        jButton5.setText("next pair");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jpActions.add(jButton5);

        jButton2.setText("previous pair");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jpActions.add(jButton2);

        jButton10.setText("show pagenames");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jpActions.add(jButton10);

        jPanel9.add(jpActions, java.awt.BorderLayout.PAGE_START);

        jPanel8.add(jPanel9, java.awt.BorderLayout.EAST);

        jPanel2.add(jPanel8, java.awt.BorderLayout.WEST);

        jPanel5.setBackground(new java.awt.Color(0, 0, 0));
        jPanel5.setPreferredSize(new java.awt.Dimension(480, 480));
        jPanel5.setLayout(new java.awt.GridLayout(3, 0));
        jPanel2.add(jPanel5, java.awt.BorderLayout.CENTER);

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        jPanel11.setLayout(new java.awt.GridLayout(16, 1, 5, 5));

        jButton9.setText("STORE KK");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel11.add(jButton9);

        jButton12.setText("block ATS");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jPanel11.add(jButton12);

        jRadioButton1.setBackground(new java.awt.Color(255, 255, 255));
        jRadioButton1.setText("block on/off");
        jRadioButton1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRadioButton1StateChanged(evt);
            }
        });
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });
        jPanel11.add(jRadioButton1);

        bg1.add(jToggleButton1);
        jToggleButton1.setText("first part");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });
        jPanel11.add(jToggleButton1);

        bg1.add(jToggleButton2);
        jToggleButton2.setText("last part");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });
        jPanel11.add(jToggleButton2);

        bg1.add(jToggleButton3);
        jToggleButton3.setText("all");
        jToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton3ActionPerformed(evt);
            }
        });
        jPanel11.add(jToggleButton3);

        jPanel2.add(jPanel11, java.awt.BorderLayout.EAST);

        getContentPane().add(jPanel2, java.awt.BorderLayout.WEST);

        jPanel3.setPreferredSize(new java.awt.Dimension(32, 32));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("id");
        jLabel2.setPreferredSize(new java.awt.Dimension(104, 14));

        jLabel3.setText("name");
        jLabel3.setPreferredSize(new java.awt.Dimension(400, 21));

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("id");
        jLabel4.setPreferredSize(new java.awt.Dimension(104, 14));

        jLabel5.setText("name");
        jLabel5.setPreferredSize(new java.awt.Dimension(400, 21));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(106, 106, 106)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(208, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3, java.awt.BorderLayout.SOUTH);

        jPanel4.setLayout(new java.awt.BorderLayout());

        jPanel10.setLayout(new java.awt.BorderLayout());

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane4.setViewportView(jTextArea2);

        jPanel10.add(jScrollPane4, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("NodeList", jPanel10);

        jPanel12.setLayout(new java.awt.BorderLayout());

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane3.setViewportView(jTextArea1);

        jPanel12.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Notes", jPanel12);

        jPanel4.add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        jPanel13.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jButton15.setText("load NodePair list");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jPanel13.add(jButton15);

        jPanel4.add(jPanel13, java.awt.BorderLayout.NORTH);

        getContentPane().add(jPanel4, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        Integer id = (Integer)jList1.getSelectedValue();
        System.out.println( id );
        
        DefaultListModel lm2 = (DefaultListModel)jList2.getModel();
        lm2.addElement(id);
        
        DefaultListModel lm1 = (DefaultListModel)jList1.getModel();
        lm1.remove( jList1.getSelectedIndex() );


        jList1.repaint();
        jList2.repaint();

    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * zu den gewählten Nodes die Edit und Access Zeitreihe in separaten
     * Diagrammen zeigen.
     * 
     */
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Object[] ids = jList2.getSelectedValues();

        MultiChart mcKRA  = new MultiChart(new JFrame(), true);
        MultiChart mcKRE  = new MultiChart(new JFrame(), true);


        mcKRE.useLegende = false;
        mcKRE.chartTitle = "RAW-DATA  #Of Edits per Node ";
        mcKRE.xLabel = "t";
        mcKRE.yLabel = "#edits";
        mcKRE.initComponents();

        mcKRA.useLegende = false;
        mcKRA.chartTitle = "RAW-DATA  #Of Access per Node ";
        mcKRA.xLabel = "t";
        mcKRA.yLabel = "#access";
        mcKRA.initComponents();

        for( Object i : ids ) {
            Integer id = (Integer)i;
            System.out.println( id );
            try {

                Messreihe[] rows = loadRows( id );

                Messreihe edits = rows[0];
                Messreihe access = rows[1];

                mcKRE.initMessreihe( edits );
                mcKRA.initMessreihe( access );
            }
            catch (Exception ex) {
                Logger.getLogger(NodeIDSelection.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        this.jPanel5.removeAll();
        this.jPanel5.add( mcKRA.createChartPanel()  );
        this.jPanel5.add( mcKRE.createChartPanel()  );

        this.validate();
        this.repaint();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        Object[] v = jList2.getSelectedValues();
        if ( v.length != 2 ) return;

        Integer id1 = (Integer) v[0];
        Integer id2 = (Integer) v[1];

        idA = id1;
        idB = id2;
        
        showKK();
    }

    public void showKK() {

        System.out.println( idA );
        System.out.println( idB );
        try {

            Messreihe[] r1;
            Messreihe[] r2;
         
                r1 = loadRows(idA);
         
                r2 = loadRows(idB);
        

            Messreihe edits1 = r1[0];
            Messreihe access1 = r1[1];

            Messreihe access2 = r2[1];
            Messreihe edits2 = r2[0];
            

            MultiChart mcKRA = new MultiChart(new JFrame(), false);
            MultiChart mcKRE = new MultiChart(new JFrame(), false);

            Color[] dcSet1 = new Color[2];
            dcSet1[0] = Color.GREEN;
            dcSet1[1] = Color.YELLOW;

            Color[] dcSet2 = new Color[2];
            dcSet2[0] = Color.RED;
            dcSet2[1] = Color.BLUE;

            mcKRE._setDefaultColors( dcSet1 );
            mcKRA._setDefaultColors( dcSet1 );


            mcKRE.useLegende = true;
            mcKRE.chartTitle = "RAW-DATA #edits ";
            mcKRE.xLabel = "t";
            mcKRE.yLabel = "#edits";
            mcKRE.initComponents();

            mcKRA.useLegende = true;
            mcKRA.chartTitle = "RAW-DATA (detrendet) #access ";
            mcKRA.xLabel = "t";
            mcKRA.yLabel = "#access";
            mcKRA.initComponents();

            mcKRE.initMessreihe( edits1 );
            mcKRE.initMessreihe( edits2 );

            mcKRA.initMessreihe( access2 );
            mcKRA.initMessreihe( access1 );

            KreuzKorrelation._defaultK = 14;
            KreuzKorrelation.debug = false;

            NodePair np1 = new NodePair();
            np1.id_A = idA;
            np1.id_B = idB;

            NodePair np2 = new NodePair();
            np2.id_A = idA;
            np2.id_B = idB;


            KreuzKorrelation KKedits = KreuzKorrelation.calcKR( edits1, edits2, KreuzKorrelation.debug, false);
            KreuzKorrelation KKaccess = KreuzKorrelation.calcKR( access1, access2, KreuzKorrelation.debug, false);

            np1.kk = KKedits;
            np2.kk = KKaccess;

            np1.initKRResults(null, null, null);
            np2.initKRResults(null, null, null);


            System.out.println( np1.getResultOfCC() );
            System.out.println( np2.getResultOfCC() );

            KKedits.setLabel( "EDITS   [strength=" + np1.signLevel + " \u03C4=" + np1.xForMaxY +"]" );
            KKaccess.setLabel( "ACCESS   [strength=" + np2.signLevel + " \u03C4=" + np2.xForMaxY +"]" );

            MultiChart mcKR2 = new MultiChart(new JFrame(), false);
            mcKR2._setDefaultColors(dcSet2);

            String n1 = PageNameLoader.getPagenameForId(idA);
            String n2 = PageNameLoader.getPagenameForId(idB);

            this.jLabel2.setText(idA+ " = ");
            this.jLabel3.setText(n1);
            this.jLabel4.setText(idB+ " = ");
            this.jLabel5.setText(n2);


            mcKR2.useLegende = true;
            mcKR2.chartTitle = "CC (" + idA+ ", " + idB + ")";
            mcKR2.xLabel = "\u03C4 ";
            mcKR2.yLabel = "CC(\u03C4)";
            mcKR2.initComponents();
            mcKR2.initMessreihe( KKedits );
            mcKR2.initMessreihe( KKaccess );

            this.jPanel5.removeAll();

            this.jpCHART_ACCESS.add( mcKRA._createChartPanel() );
            this.jpCHART_EDITS.add( mcKRE._createChartPanel() );
            this.jpCHART_CC.add( mcKR2._createChartPanel() );

            this.jPanel5.add( jpCHART_ACCESS  );
            this.jPanel5.add( jpCHART_EDITS );
            this.jPanel5.add( jpCHART_CC  );
   
            this.validate();


        }
        catch (Exception ex) {
            Logger.getLogger(NodeIDSelection.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        this.jList2.removeAll();
        this.jList2.setModel( this.jList1.getModel() );
        this.jList1.setModel( new DefaultListModel() );
        this.validate();
    }//GEN-LAST:event_jButton8ActionPerformed

    int idA = 0;
    int idB = 0;

    // This method returns a buffered image with the contents of an image
    private BufferedImage toBufferedImage(Image image) {

    if (image instanceof BufferedImage) {
    return (BufferedImage)image;
    }

    // This code ensures that all the pixels in the image are loaded
    image = new ImageIcon(image).getImage();

    // Determine if the image has transparent pixels; for this method's
    // implementation, see e661 Determining If an Image Has Transparent Pixels
    boolean hasAlpha = hasAlpha(image);

    // Create a buffered image with a format that's compatible with the screen
    BufferedImage bimage = null;
    GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
    try {
    // Determine the type of transparency of the new buffered image
    int transparency = Transparency.OPAQUE;
    if (hasAlpha) {
    transparency = Transparency.BITMASK;
    }

    // Create the buffered image
    GraphicsDevice gs = ge.getDefaultScreenDevice();
    GraphicsConfiguration gc = gs.getDefaultConfiguration();
    bimage = gc.createCompatibleImage(
    image.getWidth(null), image.getHeight(null), transparency);
    } catch (HeadlessException e) {
    // The system does not have a screen
    }

    if (bimage == null) {
    // Create a buffered image using the default color model
    int type = BufferedImage.TYPE_INT_RGB;
    if (hasAlpha) {
    type = BufferedImage.TYPE_INT_ARGB;
    }
    bimage = new BufferedImage(image.getWidth(null), image.getHeight(null), type);
    }

    // Copy image to buffered image
    Graphics g = bimage.createGraphics();

    // Paint the image onto the buffered image
    g.drawImage(image, 0, 0, image.getWidth(null), image.getHeight(null), null);
    g.dispose();

    return bimage;
    }
    // This method returns true if the specified image has transparent pixels
    public static boolean hasAlpha(Image image) {
    // If buffered image, the color model is readily available
    if (image instanceof BufferedImage) {
    BufferedImage bimage = (BufferedImage)image;
    return bimage.getColorModel().hasAlpha();
    }

    // Use a pixel grabber to retrieve the image's color model;
    // grabbing a single pixel is usually sufficient
    PixelGrabber pg = new PixelGrabber(image, 0, 0, 1, 1, false);
    try {
    pg.grabPixels();
    } catch (InterruptedException e) {
    }

    // Get the image's color model
    ColorModel cm = pg.getColorModel();
    return cm.hasAlpha();
    }

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        try {
            File saveFile = new File("./snapshots/" + idA+ "_" + idB + "_A_E_CC.gif");
            java.awt.Image img = createImage( jPanel5.getWidth(), jPanel5.getHeight());
            Graphics g = img.getGraphics();
            jPanel5.paint(g);
            ImageIO.write(toBufferedImage(img),"gif",saveFile);
            // nur melden wenn wirklich manuell ausgelösst wurde ...
            if ( evt != null ) JOptionPane.showMessageDialog(null,"Image saved to:\n\n"+saveFile.toString());
            g.dispose();
        }
        catch (Exception ex){
            ex.printStackTrace();
        }

    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        // TODO add your handling code here:
        int[] ind = this.jList2.getSelectedIndices();
        ind[0]++;
        ind[1]++;
        this.jList2.setSelectedIndices(ind);
        this.jButton4ActionPerformed(null);
        this.jButton9ActionPerformed(null);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        int[] ind = this.jList2.getSelectedIndices();
        ind[0]--;
        ind[1]--;
        this.jList2.setSelectedIndices(ind);
        this.jButton4ActionPerformed(null);
        this.jButton9ActionPerformed(null);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        Object[] data1 = this.jList1.getSelectedValues();
        Object[] data2 = this.jList2.getSelectedValues();
        
        Object[] data = new Object[ data1.length + data2.length ];
        
        int i = 0;
        for( Object o : data1 ) { 
            data[i] = o;
            i++;
        }
        for( Object o : data2 ) {
            data[i] = o;
            i++;
        }

        PageNameListe.open(data);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:

        Integer id = (Integer)jList2.getSelectedValue();
        System.out.println( id );

        DefaultListModel lm2 = (DefaultListModel)jList1.getModel();
        lm2.addElement(id);

        DefaultListModel lm1 = (DefaultListModel)jList2.getModel();
        lm1.remove( jList2.getSelectedIndex() );


        jList2.repaint();
        jList1.repaint();

    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        int max = jList1.getModel().getSize();
        jList1.setSelectionInterval(0, max-1);

        Object[] ids = jList1.getSelectedValues();

        Vector<Integer> checked = new Vector<Integer>();

        int c = 0;
        for ( Object o : ids ) {
            Integer id = (Integer)o;
            try {
                loadRows(id);
                checked.add(id);
            }
            catch( Exception ex ) {
                c++;
            }
        }
        System.out.println( c + " rows removed ... " );
        jList1.setListData(checked);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        TimeSeriesFactory.doBlock = !TimeSeriesFactory.doBlock;
        refresh();
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRadioButton1StateChanged
        // TODO add your handling code here:
        TimeSeriesFactory.doBlock = this.jRadioButton1.isSelected();
        refresh();
    }//GEN-LAST:event_jRadioButton1StateChanged

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        supressFirstPart = true;
        supressLastPart = false;
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        // TODO add your handling code here:
        supressFirstPart = false;
        supressLastPart = true;
    }//GEN-LAST:event_jToggleButton2ActionPerformed

    private void jToggleButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton3ActionPerformed
        // TODO add your handling code here
        this.supressFirstPart = false;
        this.supressLastPart = false;
    }//GEN-LAST:event_jToggleButton3ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        String s = javax.swing.JOptionPane.showInputDialog("NodePair : " );
        useNodePairString(s);
    }

    public void useNodePairString(String s) {
        String[] a = s.split("\t");
        int i1 = Integer.parseInt( a[0] );
        int i2 = Integer.parseInt( a[1] );

        idA = i1;
        idB = i2;

        showKK();
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        String s = this.jTextArea2.getSelectedText();
        int i = this.jTextArea2.getSelectionEnd() + 1;
        this.jTextArea2.setSelectionStart(i);
        int e = i+5;
        for( int x = 0 ; x < 50; x++ ) {

//            String a =

        }
        this.jTextArea2.setSelectionEnd(e);

        useNodePairString(s);
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
        File f = selectNodePairGroupFile();
        try {
            BufferedReader br = new BufferedReader(new FileReader(f));
            while (br.ready()) {
                String line = br.readLine();
                this.jTextArea2.append(line+"\n");
            }
        }
        catch (FileNotFoundException ex) {
            Logger.getLogger(NodeIDSelection.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch (IOException ex) {
                Logger.getLogger(NodeIDSelection.class.getName()).log(Level.SEVERE, null, ex);
            }

    }//GEN-LAST:event_jButton15ActionPerformed

    public static File selectNodePairGroupFile() {
        javax.swing.JFileChooser jfc = new javax.swing.JFileChooser( new File( NodeGroup.pfad ) );
        // jfc.setFileFilter( NodeGroup.getFileFilter() );

        jfc.setDialogTitle("Select a prefiltered NodePair-Group ...");
        jfc.setSize( 800,600 );

        jfc.showOpenDialog(null);

        File f = jfc.getSelectedFile();
        if ( f == null ) {
            System.err.println(">>> KEINE NodePair Gruppe gewählt !");
        }
        else {
            System.err.println(">>> NodePairGroup : " + f.getAbsolutePath() + " gewählt !");
        }
        return f;
    };

    boolean supressFirstPart = false;
    boolean supressLastPart = false;

   /**
    * @param args the command line arguments
    */
    public static void open() {
        System.out.println( "Open now ..." );
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NodeIDSelection dialog = new NodeIDSelection(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.jTextField1.setText( ng.pfad + "/" + ng.fn );
                DefaultListModel lm1 = new DefaultListModel(); 
                DefaultListModel lm2 = new DefaultListModel();
                
                for( Object i : ng.getIdsArray() ) { 
                    lm1.addElement(i);
                }
                
                dialog.jList1.setModel(lm1);
                dialog.jList2.setModel(lm2);
                dialog.setVisible(true);
            }
        });
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NodeIDSelection dialog = new NodeIDSelection(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JPanel jpActions;
    private javax.swing.JPanel jpCHART_ACCESS;
    private javax.swing.JPanel jpCHART_CC;
    private javax.swing.JPanel jpCHART_EDITS;
    private javax.swing.JPanel jpListLeft;
    private javax.swing.JPanel jpListRight;
    // End of variables declaration//GEN-END:variables

    private Messreihe[] loadRows(Integer id) throws Exception {
        Messreihe[] rows = new Messreihe[2];

        Messreihe edits = ng.loadEditsForOneID(id, NodeGroup.time_scale);
        Messreihe access = ng.loadAccessForOneID(id);


        if ( CCCalculator.doCutOffAtSTART ) {
            access.supressAtStart( CCCalculator.START_CUTTOF_LENGTH, 0.0);
        }
        access = TimeSeriesFactory.blockSpecialValues(access);
        if ( supressFirstPart ) access.supressAtStart(150, 0);
        if ( supressLastPart ) access.supressAtEnd( 150, 0);

        rows[0] = edits;
        rows[1] = access;

        return rows;

    }

    private void refresh() {
        this.jRadioButton1.setSelected( TimeSeriesFactory.doBlock );
    }

}
