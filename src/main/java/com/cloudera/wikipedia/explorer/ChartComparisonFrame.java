/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.cloudera.wikipedia.explorer;

import java.awt.Component;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.Enumeration;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFrame;
import experiments.crosscorrelation.KreuzKorrelation;

/**
 *
 * @author kamir
 */
public class ChartComparisonFrame extends javax.swing.JDialog {
    
 
    public static void _addFrames( Vector v , String titel, String typ) {
        yBoxes = 3;
        typ = "2";
        ChartComparisonFrame fr = new ChartComparisonFrame( new JFrame() , false );
  
        fr.setTitle(titel);
        fr.initComponents();
        fr.setSize( Toolkit.getDefaultToolkit().getScreenSize() );
        
        int i = 0;
        for( Object o : v) { 
            Component comp = (Component)o;
              comp.setPreferredSize( new Dimension( 450, 320) );
            if ( i % 2 == 0 ) {
                fr.jPanel3.add( comp );
            }
            else { 
                fr.jPanel4.add( comp );
            }
            i++;
        }
        
        fr.setVisible(true);
        fr._store( titel );
    }
    
    static int xBoxes = 0;
    static String typ = "0";
    static int yBoxes = 0;
    public static void _addFrames2( Vector v , String titel) {
        
        yBoxes = 3;
        typ = "3";
        ChartComparisonFrame fr = new ChartComparisonFrame( new JFrame() , false );
 
 
        fr.setTitle(titel);
        fr.initComponents();
        fr.setSize( Toolkit.getDefaultToolkit().getScreenSize() );
        
        Enumeration<Component> en = v.elements();
        while( en.hasMoreElements() ) { 

            xBoxes++;
            Component c1 = en.nextElement();
            Component c2 = en.nextElement();
            Component c3 = en.nextElement();
            
            c1.setPreferredSize( new Dimension( 450, 320) );
            c2.setPreferredSize( new Dimension( 450, 320) );
            c3.setPreferredSize( new Dimension( 450, 320) );
                        
            fr.jPanel3.add( c1 );
            fr.jPanel4.add( c2 );
            fr.jPanel6.add( c3 );
            
        }
        
        fr.setVisible(true);
        
        fr._store( titel );
    }
    
    public static void _addFrames3( Vector v , String titel, String typ) {
        
        yBoxes = 3; 
        ChartComparisonFrame fr = new ChartComparisonFrame( new JFrame() , false );
 
 
        fr.setTitle(titel);
        fr.initComponents();
        fr.setSize( Toolkit.getDefaultToolkit().getScreenSize() );
        
        Enumeration<Component> en = v.elements();
        while( en.hasMoreElements() ) { 

            xBoxes++;
            Component c1 = en.nextElement();
            Component c2 = en.nextElement();
            Component c3 = en.nextElement();
            
            c1.setPreferredSize( new Dimension( 450, 320) );
            c2.setPreferredSize( new Dimension( 450, 320) );
            c3.setPreferredSize( new Dimension( 450, 320) );
                        
            fr.jPanel3.add( c1 );
            fr.jPanel4.add( c2 );
            fr.jPanel6.add( c3 );
            
        }
        
        fr.setVisible(true);
        
        fr._store( titel );
    }
    
    void _store(String label) {
        
        Container container = this.getContentPane();
        container.setSize( 450 * xBoxes + 100, 320 * yBoxes +50  );
        
        BufferedImage img = new BufferedImage(container.getWidth(), container.getHeight(), BufferedImage.TYPE_INT_RGB);
        Graphics2D g2d = img.createGraphics();

        container.printAll(g2d);

        g2d.dispose();
        try {
            
            String kkType = KreuzKorrelation.getCalcTypeLabel();

            ImageIO.write(img, "png", new File("./data/out/TS.DISTR.DashBoard_" + label + "." + kkType + ".png" ));
            System.out.println( "./data/out/TS.DISTR."+typ+".DashBoard_" + label  + "." + kkType + ".png" );
            
        } 
        catch (IOException ex) {
            Logger.getLogger(ChartFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * Creates new form ChartComparisonFrame
     */
    public ChartComparisonFrame(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel6 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridLayout(3, 1));

        jPanel1.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jPanel3.setPreferredSize(new java.awt.Dimension(10, 330));
        jScrollPane1.setViewportView(jPanel3);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jPanel4.setPreferredSize(new java.awt.Dimension(10, 330));
        jScrollPane2.setViewportView(jPanel4);

        jPanel2.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2);

        jPanel5.setLayout(new java.awt.BorderLayout());

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jPanel6.setPreferredSize(new java.awt.Dimension(10, 330));
        jScrollPane3.setViewportView(jPanel6);

        jPanel5.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel5);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChartComparisonFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChartComparisonFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChartComparisonFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChartComparisonFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ChartComparisonFrame dialog = new ChartComparisonFrame(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
