/***
 * 
 * This is the main-tool for calculation of network meassures ...
 * 
 * 
 * look at NetworkLoaderTool
 *
 * 
 */
package research.topics.networks.comparison;

import org.apache.hadoopts.chart.simple.MultiChart;
import org.apache.hadoopts.data.io.ColumnValueCalculator;
import org.apache.hadoopts.data.series.Messreihe;
import org.apache.hadoopts.data.export.MesswertTabelle;
import java.awt.Color;
import java.io.File;
import java.util.Hashtable;
import java.util.Vector;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JRadioButton;
import research.networks.NetworkFilter;
import research.topics.networks.gui.AnalysisProject;
import research.topics.networks.gui.NetworkViewPanel;
import com.cloudera.wikiexplorer.ng.util.TimeLog;


/**
 *
 * @author kamir
 */
public class NetworkComparator extends javax.swing.JFrame {

    NetworkViewPanel np1 = null;
    NetworkViewPanel np2 = null;
    NetworkViewPanel np3 = null;
    NetworkViewPanel np4 = null;
    NetworkViewPanel np5 = null;
    
    File fA1 = null;
    File fA2 = null;
    File fA3 = null;
    File fE = null;
    File fS = null;
    

    
    private void initView() {
               
        this.jpAccess1Net.add( np1 );
        this.jpAccess2Net.add( np2 );
        this.jpAccess3Net.add( np3 );
        this.jpEditsNet.add( np4 );
        this.jpStatNet.add( np5 );
        
        initAlgorithmSelectors();

    } 

    /**
     * Creates new form NetworkComparator
     */
    public NetworkComparator() {
        initComponents();
        project = new AnalysisProject();
        project.initOriginProject();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jSpinner1 = new javax.swing.JSpinner();
        jPanel9 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jtfA1 = new javax.swing.JTextField();
        jtfA2 = new javax.swing.JTextField();
        jtfA3 = new javax.swing.JTextField();
        jtfE = new javax.swing.JTextField();
        jtfS = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jTabbedPane5 = new javax.swing.JTabbedPane();
        jTabbedPane6 = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        outPutArea = new javax.swing.JTextArea();
        jpNets = new javax.swing.JTabbedPane();
        jpAccess1Net = new javax.swing.JPanel();
        jpAccess2Net = new javax.swing.JPanel();
        jpAccess3Net = new javax.swing.JPanel();
        jpEditsNet = new javax.swing.JPanel();
        jpStatNet = new javax.swing.JPanel();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        cutMenuItem = new javax.swing.JMenuItem();
        copyMenuItem = new javax.swing.JMenuItem();
        pasteMenuItem = new javax.swing.JMenuItem();
        deleteMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentsMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Network Comparator - Version 1.0.0");
        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1024, 768));

        jPanel2.setBackground(new java.awt.Color(0, 153, 51));
        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        jPanel2.setMinimumSize(new java.awt.Dimension(205, 250));
        jPanel2.setPreferredSize(new java.awt.Dimension(800, 270));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jTabbedPane1.setMinimumSize(new java.awt.Dimension(205, 200));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(1034, 250));

        jPanel1.setPreferredSize(new java.awt.Dimension(1029, 200));

        jLabel1.setText("folder : ");

        jTextField1.setEditable(false);
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1FocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jButton2.setText("load data");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton5.setText("set ts-Filter");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jSpinner1.setValue(50);

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Input-Files of the project"));

        jLabel2.setText("access 1 : ");

        jLabel3.setText("access 2 :");

        jLabel4.setText("access 3 : ");

        jLabel5.setText("edits : ");

        jLabel6.setText("static net : ");

        jtfA1.setText("jTextField2");
        jtfA1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfA1FocusLost(evt);
            }
        });

        jtfA2.setText("jTextField3");
        jtfA2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfA2FocusLost(evt);
            }
        });

        jtfA3.setText("jTextField4");
        jtfA3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfA3FocusLost(evt);
            }
        });

        jtfE.setText("jTextField5");
        jtfE.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfEFocusLost(evt);
            }
        });

        jtfS.setText("jtfS");
        jtfS.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfSFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE))
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtfA1, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                    .addComponent(jtfA2)
                    .addComponent(jtfA3)
                    .addComponent(jtfE)
                    .addComponent(jtfS))
                .addContainerGap(97, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtfA1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtfA2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtfA3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtfE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jtfS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)))
                .addGap(18, 18, 18)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(154, 154, 154))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton5))))))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Project", jPanel1);

        jButton3.setText("init random data");
        jButton3.setToolTipText("Generates for all 5 networks a random adjacency matrix.");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3)
                .addContainerGap(648, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3)
                .addContainerGap(166, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Demo data generator", jPanel3);

        jPanel4.setLayout(new java.awt.GridLayout(1, 0));

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("fo one set of different types of networks"));

        jButton1.setText("calc similarity");
        jButton1.setToolTipText("creates one record in the log window ...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(252, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jButton1)
                .addGap(0, 151, Short.MAX_VALUE))
        );

        jPanel4.add(jPanel5);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("for series of access networks"));

        jButton4.setText("calc assortativity");
        jButton4.setEnabled(false);

        jButton6.setText("calc differential similarity");
        jButton6.setToolTipText("creates one Messreihe in the project folder ...");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(219, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addGap(32, 32, 32))
        );

        jPanel4.add(jPanel8);

        jTabbedPane1.addTab("Analysis", jPanel4);

        jCheckBox1.setSelected(true);
        jCheckBox1.setText("cross-correlation coefficient (tau=0)");

        jCheckBox2.setText("kendall tau");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2))
                .addContainerGap(512, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox2)
                .addContainerGap(139, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Meassures", jPanel10);

        jPanel2.add(jTabbedPane1, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(jPanel2, java.awt.BorderLayout.NORTH);

        jTabbedPane5.setBackground(new java.awt.Color(204, 255, 204));
        jTabbedPane5.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        jTabbedPane5.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        outPutArea.setBackground(new java.awt.Color(255, 255, 204));
        outPutArea.setColumns(20);
        outPutArea.setRows(5);
        jScrollPane2.setViewportView(outPutArea);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 610, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 89, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
        );

        jTabbedPane6.addTab("Comparison of networks", jPanel7);

        jTabbedPane5.addTab("Results", jTabbedPane6);

        jpAccess1Net.setToolTipText("Mode 1 : no time delay, just crosscorrelation coefficient");
        jpAccess1Net.setLayout(new java.awt.BorderLayout());
        jpNets.addTab("Access 1", jpAccess1Net);

        jpAccess2Net.setToolTipText("Mode 2 : Normalized cross-correaltion function");
        jpAccess2Net.setLayout(new java.awt.BorderLayout());
        jpNets.addTab("Access 2", jpAccess2Net);

        jpAccess3Net.setToolTipText("Mode 3 : Cross correlation, no time delay, dayly data with hourly resolution");
        jpAccess3Net.setLayout(new java.awt.BorderLayout());
        jpNets.addTab("Access 3", jpAccess3Net);

        jpEditsNet.setLayout(new java.awt.BorderLayout());
        jpNets.addTab("Edit", jpEditsNet);

        jpStatNet.setLayout(new java.awt.BorderLayout());
        jpNets.addTab("Static link", jpStatNet);

        jTabbedPane5.addTab("Raw data", jpNets);

        getContentPane().add(jTabbedPane5, java.awt.BorderLayout.CENTER);

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        openMenuItem.setMnemonic('o');
        openMenuItem.setText("Open");
        fileMenu.add(openMenuItem);

        saveMenuItem.setMnemonic('s');
        saveMenuItem.setText("Save");
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setMnemonic('a');
        saveAsMenuItem.setText("Save As ...");
        saveAsMenuItem.setDisplayedMnemonicIndex(5);
        fileMenu.add(saveAsMenuItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        editMenu.setMnemonic('e');
        editMenu.setText("Edit");

        cutMenuItem.setMnemonic('t');
        cutMenuItem.setText("Cut");
        editMenu.add(cutMenuItem);

        copyMenuItem.setMnemonic('y');
        copyMenuItem.setText("Copy");
        editMenu.add(copyMenuItem);

        pasteMenuItem.setMnemonic('p');
        pasteMenuItem.setText("Paste");
        editMenu.add(pasteMenuItem);

        deleteMenuItem.setMnemonic('d');
        deleteMenuItem.setText("Delete");
        editMenu.add(deleteMenuItem);

        menuBar.add(editMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        contentsMenuItem.setMnemonic('c');
        contentsMenuItem.setText("Contents");
        helpMenu.add(contentsMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        calcCrossCorrelationAndKendallTauOfPairs(); 
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        nlTool.reload();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        nlTool.initDummyData();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        double ts = ((double) (Integer) this.jSpinner1.getValue()) / 100.0;
        filter = new NetworkFilter(ts);
    }//GEN-LAST:event_jButton5ActionPerformed

    NetworkFilter filter = null;
    /**
     * calculates for all networks of  one year the values ... 
     * @param evt 
     */
    int limit = 100000;
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        
        initFilter();
        
        Messreihe[] mrs = new Messreihe[3];
        mrs[0] = new Messreihe("cc");
        mrs[1] = new Messreihe("cc_st");
        mrs[2] = new Messreihe("tau");
        
        String f = NetworkComparator.project.baseFolder + nlTool.fnAccess3;
        tl.setStamp( "<series of similarity>");

        int i = 5;
        int c = 1;
        
        Messreihe net0 = nlTool.loadRows( new File( f ), 1,2 , i-2 );
        
        //net0 = net0.limitTo( limit );
        
        Messreihe m[] = filter.applyFilter(net0); 
        net0 = m[1];
            
        for( i = 5; i < 78; i=i+2 ) { 
            System.out.println("###" + i );
            Messreihe net1 = nlTool.loadRows( new File( f ), 1,2 , i );
            
            //net1 = net1.limitTo( limit );
            m = filter.applyFilter(net1); 
       
            net1 = m[1];
            
            double[] data = processPair( net0, net1 );
            
            mrs[0].addValuePair( c, data[0] );
            mrs[1].addValuePair( c, data[1] );
            mrs[2].addValuePair( c, data[2] );
            
            c = c+1;
            net0 = net1;
        }
        tl.setStamp( "<series of similarity/>");
        
        MultiChart.open( mrs, "Access Networks", "# of week", "cc, st, k_tau" , true );
        
        MesswertTabelle mwt = new MesswertTabelle();
        mwt.setMessReihen(mrs);
        mwt.setLabel( "differential_similarity_limit="+limit+"_ts=" + filter.ts);
        mwt.setHeader("# TEST");
        
        project.storeMesswertTabelle( mwt );
 
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jtfA1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfA1FocusLost
        // TODO add your handling code here:
        this.nlTool.fnAccess1 = jtfA1.getText();
        initFiles();
    }//GEN-LAST:event_jtfA1FocusLost

    private void jtfA2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfA2FocusLost
        // TODO add your handling code here:
        this.nlTool.fnAccess2 = jtfA2.getText();
        initFiles();
    }//GEN-LAST:event_jtfA2FocusLost

    private void jtfA3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfA3FocusLost
        // TODO add your handling code here:
        this.nlTool.fnAccess3 = jtfA3.getText();
        initFiles();
    
    }//GEN-LAST:event_jtfA3FocusLost

    private void jtfEFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfEFocusLost
        // TODO add your handling code here:
        this.nlTool.fnEdits = jtfE.getText();
        initFiles();    
    }//GEN-LAST:event_jtfEFocusLost

    private void jtfSFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfSFocusLost
        // TODO add your handling code here:fnEdits
        this.nlTool.fnStatic = jtfS.getText();
        initFiles();
    }//GEN-LAST:event_jtfSFocusLost

    private void jTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusLost
        // TODO add your handling code here:
      
    }//GEN-LAST:event_jTextField1FocusLost

    
    static public NetworkLoaderTool nlTool = null;
    static public AnalysisProject project = null;

    public static AnalysisProject getProject() {
        return project;
    }

    public static void setProject(AnalysisProject project) {
        NetworkComparator.project = project;
    }

    /**
     * @param args the command line arguments
     */
    static NetworkComparator nc = null;
    static String basefolder = null;
    public static void main(String args[]) {

        basefolder = AnalysisProject.baseFolder;
        if ( args!= null) {
            if ( args.length > 0 ) {
                System.out.println(" arg[0] = basefolder " );
                basefolder = args[0];
            }
        }
        
        project.baseFolder = basefolder;
        System.out.println(" BASE: " +  project.baseFolder );
        
        NetworkPairComparison.debug = false;
        
        stdlib.StdRandom.initRandomGen(1);
        
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(NetworkComparator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(NetworkComparator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(NetworkComparator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(NetworkComparator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>
        
        nc = new NetworkComparator();
        
        nlTool = new NetworkLoaderTool( project.baseFolder, nc );

        nc.jTextField1.setText( project.baseFolder );
           
        
        nc.initFiles();
        nc.loadData();
        nc.initView();
        
        nc.setVisible(true);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JMenuItem contentsMenuItem;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JMenuItem deleteMenuItem;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JTabbedPane jTabbedPane6;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JPanel jpAccess1Net;
    private javax.swing.JPanel jpAccess2Net;
    private javax.swing.JPanel jpAccess3Net;
    private javax.swing.JPanel jpEditsNet;
    private javax.swing.JTabbedPane jpNets;
    private javax.swing.JPanel jpStatNet;
    public javax.swing.JTextField jtfA1;
    public javax.swing.JTextField jtfA2;
    public javax.swing.JTextField jtfA3;
    public javax.swing.JTextField jtfE;
    public javax.swing.JTextField jtfS;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JTextArea outPutArea;
    private javax.swing.JMenuItem pasteMenuItem;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    // End of variables declaration//GEN-END:variables

    public static Vector<Messreihe> getTestData() {
        
        Messreihe mrA1 = new Messreihe("A1");
        Messreihe mrA2 = new Messreihe("A2");
        Messreihe mrA3 = new Messreihe("A3");
        Messreihe mrE = new Messreihe("E");
        Messreihe mrS = new Messreihe("S");

        int n = 250;
        int m = 250;
        
        Messreihe mrA1r = Messreihe.getGaussianDistribution( n*m, 0.0, 0.6);
        Messreihe mrA2r = Messreihe.getGaussianDistribution( n*m, 0.0, 0.9);
        Messreihe mrA3r = Messreihe.getGaussianDistribution( n*m, 0.0, 0.9);
        Messreihe mrEr = Messreihe.getGaussianDistribution( n*m, 0.0, 1.5);
        Messreihe mrSr = Messreihe.getGaussianDistribution( n*m, 0.0, 2.8);
        
        for( int i = 0; i < n; i++ ) {
            for( int j = 0; j < m; j++ ) {
            
                Link l1 = new Link( ""+i, ""+j, (Double)mrA1r.yValues.elementAt(i*m+j));
                Link l2 = new Link( ""+i, ""+j, (Double)mrA2r.yValues.elementAt(i*m+j));
                Link l3 = new Link( ""+i, ""+j, (Double)mrA3r.yValues.elementAt(i*m+j));
                Link l4 = new Link( ""+i, ""+j, (Double)mrEr.yValues.elementAt(i*m+j));
                Link l5 = new Link( ""+i, ""+j, (Double)mrSr.yValues.elementAt(i*m+j));


                mrA1.addValue(l1.strength, l1.labels);
                mrA2.addValue(l2.strength, l2.labels);
                mrA3.addValue(l3.strength, l3.labels);
                mrE.addValue(l4.strength, l4.labels);
                mrS.addValue(l5.strength, l5.labels);
            }    
        }    


        Vector<Messreihe> mrv = new Vector<Messreihe>();
        mrv.add(mrA1);
        mrv.add(mrA2);
        mrv.add(mrA3);
        mrv.add(mrE);
        mrv.add(mrS);

        return mrv;
    }
    
    
    TimeLog tl = new TimeLog(false);

    private void calcCrossCorrelationAndKendallTauOfPairs() {
        
//        Messreihe mrA1 = nlTool.loadAccessNet1();
        Messreihe mrA3 = nlTool.loadAccessNet3();
//        Messreihe mrA2 = nlTool.loadAccessNet2();
        Messreihe mrE = nlTool.loadEditNet();
//        Messreihe mrS = nlTool.loadStaticNet();
        
//        processPair( mrA1, mrA2 );
        tl.setStamp( "<Similarity name='mrA3 x mrE'>");
        processPair( mrA3, mrE );
        tl.setStamp( "<Similarity/>");

//        processPair( mrA1, mrS );
        
//        processPair( mrA2, mrE );
        
//        processPair( mrA2, mrS );
//        
//        processPair( mrE, mrS );
//        
//       
//        processPair( mrE, mrE );
//        processPair( mrS, mrS );
//        processPair( mrA2, mrA1 );
//        processPair( mrS, mrA1 );
//        processPair( mrE, mrS );
        
    }
    
    double[] processPair( Messreihe mrA1, Messreihe mrA2 ) { 
        StringBuffer sb = new StringBuffer();
        double[] line = NetworkPairComparison.doCalc( mrA1, mrA2 , tl, this );
        sb.append("#{Netz 1 : "+ mrA1.label + "}"
                + "#{Netz 2 :" + mrA2.label + "}" 
                + "#   ==> cc=" + line[0] + " cc_st=" + line[1] + " kendall_tau=" + line[2] );
        this.outPutArea.append(sb.toString() + "\n");
        return line;
    }

    private void loadData() {
                
        np1 = new NetworkViewPanel( project, nlTool.loadAccessNet1() );
        np2 = new NetworkViewPanel( project, nlTool.loadAccessNet2() );
        np3 = new NetworkViewPanel( project, nlTool.loadAccessNet3() );
        np4 = new NetworkViewPanel( project, nlTool.loadEditNet() );
        np5 = new NetworkViewPanel( project, nlTool.loadStaticNet() );    
        
    }

    private void initFilter() {
        if ( filter == null ) { 
            
            double ts = 0.0;
            filter = new NetworkFilter(ts);
        }    
        
    }

    void initAlgorithmSelectors() { 
        this.algoSelectors.put( "cc", jCheckBox1);
        this.algoSelectors.put( "kendall_tau", jCheckBox2);        
    };
        
    void initFiles() { 
        fA1 = new File( NetworkComparator.project.baseFolder + nlTool.fnAccess1 );
        fA2 = new File( NetworkComparator.project.baseFolder + nlTool.fnAccess2 );
        fA3 = new File( NetworkComparator.project.baseFolder + nlTool.fnAccess3 );
        fE = new File( NetworkComparator.project.baseFolder + nlTool.fnEdits );
        fS = new File( NetworkComparator.project.baseFolder + nlTool.fnStatic );

        checkFile( fA1, jLabel2 );
        checkFile( fA2, jLabel3 );
        checkFile( fA3, jLabel4 );
        checkFile( fE, jLabel5 );
        checkFile( fS, jLabel6 );        
    }

    private void checkFile(File fA1, JLabel jL ) {
        if ( fA1.canRead() ) { 
            jL.setForeground(Color.green);
        }
        else { 
            jL.setForeground(Color.red);
        }        
    }
    
    Hashtable <String,JCheckBox> algoSelectors = new Hashtable <String,JCheckBox>();
    public boolean doCalc( String algorithm ) { 
        JCheckBox b = algoSelectors.get( algorithm );
        if ( b == null ) return false;
        return b.isSelected();
    }
};

    
    
 



